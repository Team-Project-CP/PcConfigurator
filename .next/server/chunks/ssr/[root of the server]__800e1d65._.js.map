{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Documents/PcConfigurator/src/app/Components/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { FaSearch, FaQuestionCircle, FaUser, FaShoppingCart, FaFilter, FaSort, FaEye, FaBalanceScale, FaHeart } from \"react-icons/fa\";\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport Link from 'next/link';\r\nimport { components } from '@/lib/data/components';\r\n\r\n// Types for backend integration\r\ninterface ComponentSpec {\r\n  id: number;\r\n  category: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  description: string;\r\n  specs: string[];\r\n  detailedSpecs: {\r\n    [key: string]: {\r\n      value: string | number;\r\n      score: number; // For comparison (higher is better)\r\n      unit?: string;\r\n    };\r\n  };\r\n  compatibility: {\r\n    socket?: string;\r\n    chipset?: string[];\r\n    ramType?: string;\r\n    formFactor?: string;\r\n    tdp?: number;\r\n  };\r\n}\r\n\r\ninterface SortOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\n// Mock function for backend API calls\r\nconst fetchComponents = async (filters: {\r\n  category?: string;\r\n  priceRange?: [number, number];\r\n  search?: string;\r\n}): Promise<ComponentSpec[]> => {\r\n  // This would be replaced with actual API call\r\n  return components as ComponentSpec[];\r\n};\r\n\r\nconst fetchComponentById = async (id: number): Promise<ComponentSpec | null> => {\r\n  // This would be replaced with actual API call\r\n  return components.find((c: ComponentSpec) => c.id === id) || null;\r\n};\r\n\r\nconst fetchRecommendations = async (component: ComponentSpec): Promise<ComponentSpec[]> => {\r\n  // This would be replaced with actual API call\r\n  return components.filter((c: ComponentSpec) => {\r\n    if (component.category === 'CPU' && c.category === 'Motherboard') {\r\n      return c.compatibility.socket === component.compatibility.socket;\r\n    }\r\n    // Add more compatibility checks for other component types\r\n    return false;\r\n  });\r\n};\r\n\r\nexport default function Components() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(\"all\");\r\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 2000]);\r\n  const [exactMinPrice, setExactMinPrice] = useState<string>('0');\r\n  const [exactMaxPrice, setExactMaxPrice] = useState<string>('2000');\r\n  const [showPriceInput, setShowPriceInput] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [sortBy, setSortBy] = useState(\"featured\");\r\n  const [showQuickView, setShowQuickView] = useState(false);\r\n  const [selectedComponent, setSelectedComponent] = useState<ComponentSpec | null>(null);\r\n  const [compareList, setCompareList] = useState<ComponentSpec[]>([]);\r\n  const [showCompare, setShowCompare] = useState(false);\r\n  const [wishlist, setWishlist] = useState<ComponentSpec[]>([]);\r\n  const [recommendations, setRecommendations] = useState<ComponentSpec[]>([]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      setIsVisible(true);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  const categories = [\"all\", \"CPU\", \"GPU\", \"RAM\", \"Storage\", \"Motherboard\", \"PSU\", \"Cooling\"];\r\n  const sortOptions = [\r\n    { value: \"featured\", label: \"Featured\" },\r\n    { value: \"price-asc\", label: \"Price: Low to High\" },\r\n    { value: \"price-desc\", label: \"Price: High to Low\" },\r\n    { value: \"name-asc\", label: \"Name: A to Z\" },\r\n    { value: \"name-desc\", label: \"Name: Z to A\" }\r\n  ];\r\n\r\n  const handleSort = (components: ComponentSpec[]): ComponentSpec[] => {\r\n    switch (sortBy) {\r\n      case \"price-asc\":\r\n        return [...components].sort((a, b) => a.price - b.price);\r\n      case \"price-desc\":\r\n        return [...components].sort((a, b) => b.price - a.price);\r\n      case \"name-asc\":\r\n        return [...components].sort((a, b) => a.name.localeCompare(b.name));\r\n      case \"name-desc\":\r\n        return [...components].sort((a, b) => b.name.localeCompare(a.name));\r\n      default:\r\n        return components;\r\n    }\r\n  };\r\n\r\n  const filteredComponents = handleSort(\r\n    components.filter(component => {\r\n      const matchesCategory = selectedCategory === \"all\" || component.category === selectedCategory;\r\n      const matchesPrice = component.price >= priceRange[0] && component.price <= priceRange[1];\r\n      const matchesSearch = component.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                           component.description.toLowerCase().includes(searchQuery.toLowerCase());\r\n      return matchesCategory && matchesPrice && matchesSearch;\r\n    })\r\n  );\r\n\r\n  const toggleCompare = (component: ComponentSpec) => {\r\n    if (compareList.find(item => item.id === component.id)) {\r\n      setCompareList(compareList.filter(item => item.id !== component.id));\r\n    } else if (compareList.length < 3) {\r\n      setCompareList([...compareList, component]);\r\n    }\r\n  };\r\n\r\n  const toggleWishlist = (component: ComponentSpec) => {\r\n    if (wishlist.find(item => item.id === component.id)) {\r\n      setWishlist(wishlist.filter(item => item.id !== component.id));\r\n    } else {\r\n      setWishlist([...wishlist, component]);\r\n    }\r\n  };\r\n\r\n  const handleExactPriceSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    const min = Math.max(0, parseInt(exactMinPrice) || 0);\r\n    const max = Math.min(10000, parseInt(exactMaxPrice) || 2000);\r\n    setPriceRange([min, max]);\r\n    setShowPriceInput(false);\r\n  };\r\n\r\n  const handlePriceInputChange = (value: string, isMin: boolean) => {\r\n    const numValue = parseInt(value) || 0;\r\n    if (isMin) {\r\n      setExactMinPrice(value);\r\n      if (numValue > parseInt(exactMaxPrice)) {\r\n        setExactMaxPrice(value);\r\n      }\r\n    } else {\r\n      setExactMaxPrice(value);\r\n      if (numValue < parseInt(exactMinPrice)) {\r\n        setExactMinPrice(value);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function to determine which spec is better in comparison\r\n  const getComparisonClass = (spec1: any, spec2: any) => {\r\n    if (!spec1 || !spec2) return '';\r\n    return spec1.score > spec2.score ? 'text-green-500 font-bold' : \r\n           spec1.score < spec2.score ? 'text-red-500' : 'text-gray-600';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-purple-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100\">\r\n      {/* Top Banner */}\r\n      <div className={`bg-purple-600 text-white text-center text-sm py-2 transition-all duration-1000 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-4'}`}>\r\n        Certified Refurbished Gaming PCs. <a href=\"#\" className=\"underline\">Shop now &gt;</a>\r\n      </div>\r\n\r\n      {/* Navigation */}\r\n      <nav className={`text-white bg-black px-8 py-4 flex justify-center items-center transition-all duration-1000 delay-200 ${isVisible ? 'opacity-100 translate-y-0' : 'opacity-0 -translate-y-4'}`}>\r\n        <div className=\"flex items-center space-x-8\">\r\n          <span className=\"text-2xl font-bold\">Domino</span>\r\n          <div className=\"hidden md:flex space-x-6\">\r\n            <a href=\"#\" className=\"hover:text-gray-400\">Deals</a>\r\n            <a href=\"#\" className=\"hover:text-gray-400\">Gaming PCs</a>\r\n            <a href=\"/Components\" className=\"text-purple-500\">Components</a>\r\n            <a href=\"/Gaming-Gear\" className=\"hover:text-gray-400\">Gaming Gear</a>\r\n            <a href=\"/Monitors\" className=\"hover:text-gray-400\">Monitors</a>\r\n            <a href=\"/Software\" className=\"hover:text-gray-400\">Software</a>\r\n            <a href=\"/Community\" className=\"hover:text-gray-400\">Community</a>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-6 ml-auto\">\r\n          <FaSearch className=\"text-xl hover:text-gray-400 cursor-pointer\" />\r\n          <FaQuestionCircle className=\"text-xl hover:text-gray-400 cursor-pointer\" />\r\n          <FaUser className=\"text-xl hover:text-gray-400 cursor-pointer\" />\r\n          <FaShoppingCart className=\"text-xl hover:text-gray-400 cursor-pointer\" />\r\n        </div>\r\n      </nav>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">PC Components</h1>\r\n          <p className=\"text-gray-600\">Build your dream PC with our premium selection of components</p>\r\n        </div>\r\n\r\n        {/* Filters, Sort, and Search */}\r\n        <div className=\"flex flex-col md:flex-row gap-4 mb-8\">\r\n          <div className=\"flex-1\">\r\n            <div className=\"relative\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Search components...\"\r\n                className=\"w-full px-4 py-2 rounded-lg border focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n                value={searchQuery}\r\n                onChange={(e) => setSearchQuery(e.target.value)}\r\n              />\r\n              <FaSearch className=\"absolute right-3 top-3 text-gray-400\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-4\">\r\n            <select\r\n              className=\"px-4 py-2 rounded-lg border focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n              value={selectedCategory}\r\n              onChange={(e) => setSelectedCategory(e.target.value)}\r\n            >\r\n              {categories.map(category => (\r\n                <option key={category} value={category}>\r\n                  {category.charAt(0).toUpperCase() + category.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <select\r\n              className=\"px-4 py-2 rounded-lg border focus:outline-none focus:ring-2 focus:ring-purple-500\"\r\n              value={sortBy}\r\n              onChange={(e) => setSortBy(e.target.value)}\r\n            >\r\n              {sortOptions.map(option => (\r\n                <option key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Price Range Section */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <label className=\"block text-sm font-medium text-gray-700\">\r\n              Price Range: ${priceRange[0]} - ${priceRange[1]}\r\n            </label>\r\n            <button\r\n              onClick={() => setShowPriceInput(!showPriceInput)}\r\n              className=\"text-purple-600 text-sm hover:text-purple-700\"\r\n            >\r\n              {showPriceInput ? 'Use Slider' : 'Enter Exact Price'}\r\n            </button>\r\n          </div>\r\n          \r\n          {showPriceInput ? (\r\n            <form onSubmit={handleExactPriceSubmit} className=\"flex gap-4 items-center\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <span>$</span>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"10000\"\r\n                  value={exactMinPrice}\r\n                  onChange={(e) => handlePriceInputChange(e.target.value, true)}\r\n                  className=\"w-24 px-2 py-1 border rounded\"\r\n                />\r\n              </div>\r\n              <span>-</span>\r\n              <div className=\"flex items-center gap-2\">\r\n                <span>$</span>\r\n                <input\r\n                  type=\"number\"\r\n                  min=\"0\"\r\n                  max=\"10000\"\r\n                  value={exactMaxPrice}\r\n                  onChange={(e) => handlePriceInputChange(e.target.value, false)}\r\n                  className=\"w-24 px-2 py-1 border rounded\"\r\n                />\r\n              </div>\r\n              <button\r\n                type=\"submit\"\r\n                className=\"bg-purple-600 text-white px-4 py-1 rounded hover:bg-purple-700\"\r\n              >\r\n                Apply\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"flex gap-4 items-center\">\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"2000\"\r\n                value={priceRange[0]}\r\n                onChange={(e) => setPriceRange([parseInt(e.target.value), priceRange[1]])}\r\n                className=\"w-full\"\r\n              />\r\n              <input\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"2000\"\r\n                value={priceRange[1]}\r\n                onChange={(e) => setPriceRange([priceRange[0], parseInt(e.target.value)])}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Compare Bar */}\r\n        {compareList.length > 0 && (\r\n          <div className=\"fixed bottom-0 left-0 right-0 bg-white shadow-lg p-4 z-50\">\r\n            <div className=\"container mx-auto flex items-center justify-between\">\r\n              <div className=\"flex gap-4\">\r\n                {compareList.map(item => (\r\n                  <div key={item.id} className=\"flex items-center gap-2\">\r\n                    <img src={item.image} alt={item.name} className=\"w-12 h-12 object-cover rounded\" />\r\n                    <span>{item.name}</span>\r\n                    <button onClick={() => toggleCompare(item)} className=\"text-gray-500 hover:text-gray-700\">\r\n                      <IoClose size={20} />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button\r\n                onClick={() => setShowCompare(true)}\r\n                className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700\"\r\n              >\r\n                Compare ({compareList.length})\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Components Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n          {filteredComponents.map(component => (\r\n            <div key={component.id} className=\"bg-white rounded-lg shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300\">\r\n              <div className=\"relative\">\r\n                <img\r\n                  src={component.image}\r\n                  alt={component.name}\r\n                  className=\"w-full h-48 object-cover\"\r\n                />\r\n                <div className=\"absolute top-2 right-2 bg-purple-600 text-white px-2 py-1 rounded\">\r\n                  {component.category}\r\n                </div>\r\n                <div className=\"absolute top-2 left-2 flex flex-col gap-2\">\r\n                  <button\r\n                    onClick={() => toggleWishlist(component)}\r\n                    className={`p-2 rounded-full ${\r\n                      wishlist.find(item => item.id === component.id)\r\n                        ? \"bg-red-500 text-white\"\r\n                        : \"bg-white text-gray-600\"\r\n                    }`}\r\n                  >\r\n                    <FaHeart size={16} />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => {\r\n                      setSelectedComponent(component);\r\n                      setShowQuickView(true);\r\n                    }}\r\n                    className=\"p-2 rounded-full bg-white text-gray-600 hover:text-purple-600\"\r\n                  >\r\n                    <FaEye size={16} />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => toggleCompare(component)}\r\n                    className={`p-2 rounded-full ${\r\n                      compareList.find(item => item.id === component.id)\r\n                        ? \"bg-purple-600 text-white\"\r\n                        : \"bg-white text-gray-600\"\r\n                    }`}\r\n                  >\r\n                    <FaBalanceScale size={16} />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-4\">\r\n                <Link \r\n                  href={`/Components/${component.id}`}\r\n                  className=\"text-xl font-semibold mb-2 hover:text-purple-600 transition-colors\"\r\n                >\r\n                  {component.name}\r\n                </Link>\r\n                <p className=\"text-gray-600 mb-4\">{component.description}</p>\r\n                <div className=\"mb-4\">\r\n                  <h4 className=\"font-semibold mb-2\">Key Specs:</h4>\r\n                  <ul className=\"list-disc list-inside text-sm text-gray-600\">\r\n                    {component.specs.map((spec, index) => (\r\n                      <li key={index}>{spec}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-2xl font-bold text-purple-600\">${component.price}</span>\r\n                  <button className=\"bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 transition-colors\">\r\n                    Add to Cart\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick View Modal */}\r\n      {showQuickView && selectedComponent && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-4xl w-full mx-4 p-6\">\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n              <h2 className=\"text-2xl font-bold\">{selectedComponent.name}</h2>\r\n              <button\r\n                onClick={() => setShowQuickView(false)}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                <IoClose size={24} />\r\n              </button>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div>\r\n                <img\r\n                  src={selectedComponent.image}\r\n                  alt={selectedComponent.name}\r\n                  className=\"w-full h-auto rounded-lg\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <p className=\"text-gray-600 mb-4\">{selectedComponent.description}</p>\r\n                <div className=\"mb-4\">\r\n                  <h3 className=\"font-semibold mb-2\">Specifications:</h3>\r\n                  <ul className=\"list-disc list-inside text-gray-600\">\r\n                    {selectedComponent.specs.map((spec, index) => (\r\n                      <li key={index}>{spec}</li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <span className=\"text-3xl font-bold text-purple-600\">\r\n                    ${selectedComponent.price}\r\n                  </span>\r\n                  <div className=\"flex gap-2\">\r\n                    <button\r\n                      onClick={() => toggleWishlist(selectedComponent)}\r\n                      className={`p-2 rounded ${\r\n                        wishlist.find(item => item.id === selectedComponent.id)\r\n                          ? \"bg-red-500 text-white\"\r\n                          : \"bg-gray-200 text-gray-600\"\r\n                      }`}\r\n                    >\r\n                      <FaHeart size={20} />\r\n                    </button>\r\n                    <button\r\n                      onClick={() => toggleCompare(selectedComponent)}\r\n                      className={`p-2 rounded ${\r\n                        compareList.find(item => item.id === selectedComponent.id)\r\n                          ? \"bg-purple-600 text-white\"\r\n                          : \"bg-gray-200 text-gray-600\"\r\n                      }`}\r\n                    >\r\n                      <FaBalanceScale size={20} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <button className=\"w-full bg-purple-600 text-white py-3 rounded-lg hover:bg-purple-700 transition-colors\">\r\n                  Add to Cart\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Compare Modal with Enhanced Comparison */}\r\n      {showCompare && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white rounded-lg max-w-6xl w-full mx-4 p-6\">\r\n            <div className=\"flex justify-between items-start mb-4\">\r\n              <h2 className=\"text-2xl font-bold\">Compare Components</h2>\r\n              <button\r\n                onClick={() => setShowCompare(false)}\r\n                className=\"text-gray-500 hover:text-gray-700\"\r\n              >\r\n                <IoClose size={24} />\r\n              </button>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              {compareList.map(component => (\r\n                <div key={component.id} className=\"border rounded-lg p-4\">\r\n                  <img\r\n                    src={component.image}\r\n                    alt={component.name}\r\n                    className=\"w-full h-48 object-cover rounded-lg mb-4\"\r\n                  />\r\n                  <Link\r\n                    href={`/Components/${component.id}`}\r\n                    className=\"text-xl font-semibold mb-2 hover:text-purple-600 transition-colors\"\r\n                  >\r\n                    {component.name}\r\n                  </Link>\r\n                  <p className=\"text-gray-600 mb-4\">{component.description}</p>\r\n                  \r\n                  {/* Detailed Specifications Comparison */}\r\n                  <div className=\"mb-4\">\r\n                    {Object.entries(component.detailedSpecs).map(([key, spec]) => {\r\n                      const comparisonClass = getComparisonClass(\r\n                        spec,\r\n                        compareList.find(c => c.id !== component.id)?.detailedSpecs[key]\r\n                      );\r\n                      return (\r\n                        <div key={key} className=\"flex justify-between py-1\">\r\n                          <span className=\"text-gray-600\">{key}:</span>\r\n                          <span className={comparisonClass}>\r\n                            {spec.value}{spec.unit || ''}\r\n                          </span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  \r\n                  <div className=\"text-2xl font-bold text-purple-600 mb-4\">\r\n                    ${component.price}\r\n                  </div>\r\n                  <button className=\"w-full bg-purple-600 text-white py-2 rounded hover:bg-purple-700\">\r\n                    Add to Cart\r\n                  </button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n} "],"names":[],"mappings":"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","debugId":null}}]
}