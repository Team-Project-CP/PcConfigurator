{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/USER/Documents/PcConfigurator/src/app/api/components/%5Bid%5D/recommendations/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\r\n\r\ninterface ComponentSpec {\r\n  id: number;\r\n  category: string;\r\n  name: string;\r\n  price: number;\r\n  image: string;\r\n  description: string;\r\n  specs: string[];\r\n  detailedSpecs: {\r\n    [key: string]: {\r\n      value: string | number;\r\n      score: number;\r\n      unit?: string;\r\n    };\r\n  };\r\n  compatibility: {\r\n    socket?: string;\r\n    chipset?: string[];\r\n    ramType?: string;\r\n    formFactor?: string;\r\n    tdp?: number;\r\n  };\r\n}\r\n\r\n// This would be replaced with a database in production\r\nconst components: ComponentSpec[] = [\r\n  // ... your component data from the Components page\r\n];\r\n\r\nexport async function GET(\r\n  request: Request,\r\n  { params }: { params: { id: string } }\r\n) {\r\n  try {\r\n    const component = components.find(c => c.id === parseInt(params.id));\r\n    \r\n    if (!component) {\r\n      return NextResponse.json(\r\n        { error: 'Component not found' },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    // Get compatible components based on the current component's specifications\r\n    const recommendations = components.filter(c => {\r\n      if (c.id === component.id) return false; // Don't recommend the same component\r\n\r\n      // CPU to Motherboard compatibility\r\n      if (component.category === 'CPU' && c.category === 'Motherboard') {\r\n        return c.compatibility.socket === component.compatibility.socket;\r\n      }\r\n\r\n      // Motherboard to CPU compatibility\r\n      if (component.category === 'Motherboard' && c.category === 'CPU') {\r\n        return c.compatibility.socket === component.compatibility.socket;\r\n      }\r\n\r\n      // RAM compatibility\r\n      if ((component.category === 'Motherboard' && c.category === 'RAM') ||\r\n          (component.category === 'RAM' && c.category === 'Motherboard')) {\r\n        return c.compatibility.ramType === component.compatibility.ramType;\r\n      }\r\n\r\n      // PSU compatibility (based on TDP requirements)\r\n      if (component.category === 'PSU') {\r\n        return c.compatibility.tdp && c.compatibility.tdp <= component.compatibility.tdp!;\r\n      }\r\n\r\n      // GPU to PSU compatibility\r\n      if (component.category === 'GPU' && c.category === 'PSU') {\r\n        return component.compatibility.tdp && component.compatibility.tdp <= c.compatibility.tdp!;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    return NextResponse.json(recommendations);\r\n  } catch (error) {\r\n    return NextResponse.json(\r\n      { error: 'Internal server error' },\r\n      { status: 500 }\r\n    );\r\n  }\r\n} "],"names":[],"mappings":";;;AAAA;;AA0BA,uDAAuD;AACvD,MAAM,aAA8B,EAEnC;AAEM,eAAe,IACpB,OAAgB,EAChB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,YAAY,WAAW,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,SAAS,OAAO,EAAE;QAElE,IAAI,CAAC,WAAW;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAsB,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,4EAA4E;QAC5E,MAAM,kBAAkB,WAAW,MAAM,CAAC,CAAA;YACxC,IAAI,EAAE,EAAE,KAAK,UAAU,EAAE,EAAE,OAAO,OAAO,qCAAqC;YAE9E,mCAAmC;YACnC,IAAI,UAAU,QAAQ,KAAK,SAAS,EAAE,QAAQ,KAAK,eAAe;gBAChE,OAAO,EAAE,aAAa,CAAC,MAAM,KAAK,UAAU,aAAa,CAAC,MAAM;YAClE;YAEA,mCAAmC;YACnC,IAAI,UAAU,QAAQ,KAAK,iBAAiB,EAAE,QAAQ,KAAK,OAAO;gBAChE,OAAO,EAAE,aAAa,CAAC,MAAM,KAAK,UAAU,aAAa,CAAC,MAAM;YAClE;YAEA,oBAAoB;YACpB,IAAI,AAAC,UAAU,QAAQ,KAAK,iBAAiB,EAAE,QAAQ,KAAK,SACvD,UAAU,QAAQ,KAAK,SAAS,EAAE,QAAQ,KAAK,eAAgB;gBAClE,OAAO,EAAE,aAAa,CAAC,OAAO,KAAK,UAAU,aAAa,CAAC,OAAO;YACpE;YAEA,gDAAgD;YAChD,IAAI,UAAU,QAAQ,KAAK,OAAO;gBAChC,OAAO,EAAE,aAAa,CAAC,GAAG,IAAI,EAAE,aAAa,CAAC,GAAG,IAAI,UAAU,aAAa,CAAC,GAAG;YAClF;YAEA,2BAA2B;YAC3B,IAAI,UAAU,QAAQ,KAAK,SAAS,EAAE,QAAQ,KAAK,OAAO;gBACxD,OAAO,UAAU,aAAa,CAAC,GAAG,IAAI,UAAU,aAAa,CAAC,GAAG,IAAI,EAAE,aAAa,CAAC,GAAG;YAC1F;YAEA,OAAO;QACT;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}